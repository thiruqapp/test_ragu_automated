# The name of the workflow that GitHub displays on your repository's 'Actions' tab.
name: Publish Python üêç distribution üì¶ to PyPI

# The event that triggers the workflow.
on:
  push:
    # # This workflow runs only on pushes to main branch
    # branches: [main]

    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

# Job definitions for the workflow.
jobs:
  # Job ID: build
  # This job builds the environment with all required dependencies and builds the Python package distribution.
  build:
    # The name of the job that GitHub displays on the Actions tab.
    name: Build distribution üì¶ (${{ github.ref_name }})

    # # This job runs only on tag pushes to the repository.
    # if: startsWith(github.ref, 'refs/tags/')

    # The platforms on which the job will run.
    runs-on: ubuntu-latest

    # The steps that the job will execute.
    steps:
      # Step 1: Checks-out the repository, so the workflow can access its contents.
      # Ref - https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4
        with:
          # Do not persist credentials to avoid issues with LFS
          persist-credentials: false

      # Step 2: Sets up the Python environment for the job.
      # Ref - https://github.com/marketplace/actions/setup-python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # x-ranges to specify the latest stable version of Python
          # Ref - https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#specifying-a-python-version
          python-version: "3.x"

      # Step 3: Installs the required python build frontend for building the Python package.
      # Ref - https://pypi.org/project/build/
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          mkdocs-material
          mike
          --user

      # Step 4: Build the Python package distribution.
      # This step uses the `build` module to create a binary wheel and a source tarball.
      # The `build` module is a PEP 517 compliant build frontend.
      # Ref - https://build.pypa.io/en/stable/
      - name: Build a binary wheel and a source tarball
        run: python3 -m build

      # Step 5: Uploads the built distribution packages to GitHub Actions artifacts
      # Ref - https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          # Upload only the contents of the `dist/` directory
          # This directory contains the built distribution packages.
          # The `dist/` directory is created by the `build` step.
          path: dist/

      # Step 6: Build the documentation based on Mkdcos.
      # This step uses the `build` module to create a binary wheel and a source tarball.
      # The `build` module is a PEP 517 compliant build frontend.
      # Ref - https://build.pypa.io/en/stable/
      - name: Build a documentation based on Mkdocs
        run: python3 -m mkdocs build

      # Step 7: Uploads the built distribution packages to GitHub Actions artifacts
      # Ref - https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Store the docs
        uses: actions/upload-artifact@v4
        with:
          name: python-package-docs
          # Upload only the contents of the `site/` directory
          # This directory contains the built distribution packages.
          # The `site/` directory is created by the `build` step.
          path: site/

  # Job ID: publish-to-pypi
  # This job publishes the built Python package distribution to PyPI.
  publish-to-testpypi:
    # The name of the job that GitHub displays on the Actions tab.
    name: Publish Python üêç distribution üì¶ to TestPyPI

    # This job runs only if the `build` job is successful.
    needs:
      - build

    # The platforms on which the job will run.
    runs-on: ubuntu-latest

    # The environment in which the job will run.
    # Ref - https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idenvironment
    environment:
      name: testpypi
      url: https://test.pypi.org/p/test_ragu_automated

    # The permissions required for this job.
    # Ref - https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions
    permissions:
      # The `id-token: write` permission is mandatory for trusted publishing to TestPyPI.
      id-token: write

    # The steps that the job will execute.
    steps:
      # Step 1: Downloads the built distribution packages from the previous job.
      # Ref - https://github.com/marketplace/actions/download-a-build-artifact
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      # Step 2: Publishes the distribution packages to TestPyPI.
      # Ref - https://github.com/marketplace/actions/pypi-publish
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1

        # Only for test PyPI, remove it for live version
        with:
          repository-url: https://test.pypi.org/legacy/

  # Job ID: publish-to-pypi
  # This job publishes the built Python package distribution to PyPI.
  release:
    # The name of the job that GitHub displays on the Actions tab.
    name: Create Python üêç distribution üì¶ release on GitHub

    # This job runs only if the `build` job is successful.
    needs:
      - build

    # The platforms on which the job will run.
    runs-on: ubuntu-latest

    permissions:
      # Ref - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
      contents: write  # Required to create a release

    # The steps that the job will execute.
    steps:
        
      # Step 1: Downloads the built distribution packages from the previous job.
      # Ref - https://github.com/marketplace/actions/download-a-build-artifact
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      # Step 2: Create GitHub Release
      # Ref - https://github.com/marketplace/actions/pypi-publish
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2

        # Only for test PyPI, remove it for live version
        with:
          files: dist/*.whl,dist/*.tar.gz
          draft: false
          preserve_order: true

      - name: Display structure of downloaded files
        run: ls -R

  # Job ID: publish-to-pypi
  # This job publishes the built Python package distribution to PyPI.
  docs_deploy:
    # The name of the job that GitHub displays on the Actions tab.
    name: Upload Python üêç docs üì¶ on AWS S3

    # This job runs only if the `build` job is successful.
    needs:
      - build

    # The platforms on which the job will run.
    runs-on: ubuntu-latest

    permissions:
      # Ref - https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
      id-token: write  # This is required for requesting the JWT

    # The steps that the job will execute.
    steps:

      # Step 1: Downloads the built distribution packages from the previous job.
      # Ref - https://github.com/marketplace/actions/download-a-build-artifact
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-docs
          path: site/

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::558470717245:role/github_test_repo
          role-session-name: samplerolesession
          aws-region: ap-south-1
      
      - name: Upload docs to S3
        run: |
          # Latest version of docs
          aws s3 sync site/ s3://tmp-ragu-github-actions
          
          # Previous version of docs
          aws s3 sync site/ s3://tmp-ragu-github-actions/${{ github.ref_name }} --delete